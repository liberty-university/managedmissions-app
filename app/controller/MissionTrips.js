// Generated by CoffeeScript 1.3.1
(function() {

  Ext.define('ManagedMissions.controller.MissionTrips', {
    extend: 'Ext.app.Controller',
    config: {
      routes: {
        'mission_trips': 'index'
      },
      refs: {
        missionTripsNavigationView: '#missionTripsNavigationView',
        missionTripsList: '#missionTripsList',
        missionTripTabPanel: '#missionTripTabPanel',
        missionTripDetailsDataView: '#missionTripDetailsDataView',
        missionTripMembersDataView: '#missionTripMembersDataView',
        missionTripMeetingsDataView: '#missionTripMeetingsDataView',
        missionTripTasksGoalsDataView: '#missionTripTasksGoalsDataView',
        missionTripBudgetsDataView: '#missionTripBudgetsDataView'
      },
      control: {
        missionTripsList: {
          disclose: 'onMissionTripsListDisclose'
        }
      }
    },
    init: function() {
      var store;
      store = Ext.getStore('MissionTrips');
      return store.on('load', this.onMissionTripsLoad, this);
    },
    index: function() {
      var missionTripsNavigationView, store;
      store = Ext.getStore('MissionTrips');
      if (!store.isLoaded()) {
        store.load();
      }
      missionTripsNavigationView = this.getMissionTripsNavigationView() || Ext.create('ManagedMissions.view.MissionTripsNavigationView');
      return Ext.Viewport.setActiveItem(missionTripsNavigationView);
    },
    onMissionTripsLoad: function(store, results, success) {
      if (!success) {
        store = Ext.getStore('MissionTrips');
        store.loaded = false;
        return this.redirectTo('login');
      }
    },
    onMissionTripsListDisclose: function(list, record, target, index, e, eOpts) {
      var missionTripTabPanel, missionTripsNavigationView, proxy, store;
      missionTripsNavigationView = this.getMissionTripsNavigationView() || Ext.create('ManagedMissions.view.MissionTripsNavigationView');
      Ext.Viewport.setActiveItem(missionTripsNavigationView);
      missionTripTabPanel = this.getMissionTripTabPanel() || Ext.create('ManagedMissions.view.MissionTripTabPanel');
      missionTripTabPanel.setRecord(record);
      store = Ext.getStore('Members');
      proxy = store.getProxy();
      if (proxy.config.extraParams.missionTripId !== record.data.MissionTripId) {
        proxy.config.extraParams.missionTripId = record.data.MissionTripId;
        store.clearData();
        store.load();
      }
      return missionTripsNavigationView.push(missionTripTabPanel);
    }
  });

}).call(this);
